<?php
// Conexão com o banco de dados
include('atlas/conexao.php');
$conn = mysqli_connect($dbhost, $dbuser, $dbpass, $dbname);
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

// Determinar página ativa
$active_page = isset($_GET['page']) ? $_GET['page'] : 'apps';

// Determinar categoria ativa
$active_category = isset($_GET['category']) ? $_GET['category'] : 'all';

// Buscar aplicativos com filtro de categoria
$apps_query = "SELECT * FROM loja_apps WHERE status = 'ativo'";
if ($active_category != 'all' && $active_page == 'apps') {
    $apps_query .= " AND categoria = '" . mysqli_real_escape_string($conn, $active_category) . "'";
}
$apps_query .= " ORDER BY CASE WHEN categoria = 'Internet VPN' THEN 0 ELSE 1 END, downloads DESC";
$apps_result = $conn->query($apps_query);

// Buscar categorias disponíveis
$categories_query = "SELECT DISTINCT categoria FROM loja_apps WHERE status = 'ativo'";
$categories_result = $conn->query($categories_query);
$categories = [];
while ($row = $categories_result->fetch_assoc()) {
    $categories[] = $row['categoria'];
}

// Buscar anúncios ativos
$ads_query = "SELECT * FROM loja_anuncios WHERE status = 'ativo' AND 
             (data_fim >= CURDATE() OR data_fim IS NULL) ORDER BY RAND()";
$ads_result = $conn->query($ads_query);
$ads = $ads_result->fetch_all(MYSQLI_ASSOC);

// Buscar vídeos de suporte
$videos_query = "SELECT * FROM loja_videos_suporte WHERE status = 'ativo' ORDER BY id DESC";
$videos_result = $conn->query($videos_query);
$support_videos = [];
if ($videos_result && $videos_result->num_rows > 0) {
    $support_videos = $videos_result->fetch_all(MYSQLI_ASSOC);
}

// Processar busca se existir
$search_results = [];
if (isset($_GET['search']) && !empty($_GET['search'])) {
    $search_term = mysqli_real_escape_string($conn, $_GET['search']);
    
    if ($active_page == 'apps') {
        $search_query = "SELECT * FROM loja_apps WHERE status = 'ativo' AND 
                        (nome LIKE '%$search_term%' OR descricao LIKE '%$search_term%')";
    } else if ($active_page == 'support') {
        $search_query = "SELECT * FROM loja_videos_suporte WHERE status = 'ativo' AND 
                        (titulo LIKE '%$search_term%' OR descricao LIKE '%$search_term%')";
    }
    
    $search_result = $conn->query($search_query);
    if ($search_result) {
        $search_results = $search_result->fetch_all(MYSQLI_ASSOC);
    }
}

// Fechar conexão
$conn->close();

// Função para formatar data
function format_date($datetime) {
    $date = new DateTime($datetime);
    $now = new DateTime();
    $interval = $now->diff($date);
    
    if ($interval->y > 0) {
        return $interval->y . " " . ($interval->y == 1 ? "ano" : "anos") . " atrás";
    } elseif ($interval->m > 0) {
        return $interval->m . " " . ($interval->m == 1 ? "mês" : "meses") . " atrás";
    } elseif ($interval->d > 0) {
        return $interval->d . " " . ($interval->d == 1 ? "dia" : "dias") . " atrás";
    } elseif ($interval->h > 0) {
        return $interval->h . " " . ($interval->h == 1 ? "hora" : "horas") . " atrás";
    } else {
        return "Hoje";
    }
}

// Array de cores para ícones de canal - cores completamente diferentes
$channel_colors = [
    '#FF0000', // Vermelho
    '#1E88E5', // Azul
    '#43A047', // Verde
    '#FFA000', // Âmbar
    '#8E24AA', // Roxo
    '#00ACC1', // Ciano
    '#F4511E', // Laranja escuro
    '#546E7A', // Azul cinza
    '#6D4C41', // Marrom
    '#EC407A', // Rosa
    '#26A69A', // Verde-azulado
    '#5C6BC0', // Índigo
    '#EF6C00', // Laranja
    '#009688', // Verde-azulado
    '#7CB342', // Verde limão
    '#3949AB', // Índigo
    '#00897B', // Verde-azulado escuro
    '#C0CA33', // Lima
    '#039BE5', // Azul claro
    '#D81B60'  // Rosa escuro
];

// Array de cores para os botões de download - cores diferentes dos ícones
$download_button_colors = [
    '#2196F3', // Azul
    '#9C27B0', // Roxo
    '#FF9800', // Laranja
    '#4CAF50', // Verde
    '#E91E63', // Rosa
    '#3F51B5', // Índigo  
    '#F44336', // Vermelho
    '#009688', // Verde-azulado
    '#673AB7', // Roxo profundo
    '#FFC107', // Âmbar
    '#00BCD4', // Ciano
    '#8BC34A', // Verde limão
    '#FF5722', // Laranja profundo
    '#795548', // Marrom
    '#607D8B', // Azul cinza
    '#CDDC39', // Lima
    '#03A9F4', // Azul claro
    '#9E9E9E', // Cinza
    '#FFEB3B', // Amarelo
    '#FF4081'  // Rosa acento
];

// Array de ícones diferentes para canais
$channel_icons = [
    'fas fa-play',
    'fas fa-video',
    'fas fa-film',
    'fas fa-tv',
    'fas fa-camera',
    'fas fa-headphones',
    'fas fa-music',
    'fas fa-podcast',
    'fas fa-photo-video',
    'fas fa-microphone',
    'fas fa-broadcast-tower',
    'fas fa-satellite-dish',
    'fas fa-rss',
    'fas fa-graduation-cap',
    'fas fa-book',
    'fas fa-chalkboard-teacher',
    'fas fa-laptop-code',
    'fas fa-gamepad',
    'fas fa-mobile-alt',
    'fas fa-desktop'
];

// Função para obter uma cor única baseada no ID
function getColorById($id, $colors_array) {
    $index = $id % count($colors_array);
    return $colors_array[$index];
}

// Função para obter um ícone único baseado no ID
function getIconById($id, $icons_array) {
    $index = $id % count($icons_array);
    return $icons_array[$index];
}
?>

<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dodowlaosd Play Store</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --play-green: #1AA260;
            --play-dark: #202124;
            --play-light: #f8f9fa;
            --play-card: #ffffff;
            --play-border: #e0e0e0;
            --play-text-primary: #3c4043;
            --play-text-secondary: #5f6368;
            --play-blue: #4285F4;
            --play-red: #EA4335;
            --play-yellow: #FBBC05;
            --play-purple: #8e44ad;
            --yt-red: #FF0000;
            --yt-blue: #3EA6FF;
            --yt-bg: #f9f9f9;
            --yt-text: #030303;
            --yt-text-secondary: #606060;
            --yt-border: #e5e5e5;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Roboto', Arial, sans-serif;
        }

        body {
            background-color: var(--play-light);
            color: var(--play-text-primary);
        }

        /* Header estilo Play Store */
        .play-header {
            background: var(--play-card);
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            padding: 12px 16px;
            position: sticky;
            top: 0;
            z-index: 100;
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .play-logo {
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .play-logo-icon {
            color: var(--play-green);
            font-size: 24px;
        }

        .play-logo-text {
            font-size: 20px;
            font-weight: 500;
            color: var(--play-text-primary);
        }

        .play-search-form {
            flex-grow: 1;
            position: relative;
        }

        .play-search-form input {
            width: 100%;
            padding: 10px 15px 10px 40px;
            border-radius: 20px;
            border: 1px solid var(--play-border);
            background: #f1f3f4;
            font-size: 16px;
            outline: none;
        }

        .play-search-form button {
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            color: var(--play-text-secondary);
        }

        .play-user {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            background: var(--play-green);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
        }

        /* Container principal */
        .play-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 16px;
        }

        /* Seções */
        .play-section {
            margin-bottom: 24px;
        }

        .play-section-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 16px;
        }

        .play-section-title {
            font-size: 20px;
            font-weight: 500;
        }

        .play-section-more {
            color: var(--play-green);
            font-size: 14px;
            font-weight: 500;
            text-decoration: none;
        }

  /* Carrossel de anúncios */
       .play-carousel {
    position: relative;
    width: 100%;
    height: 300px; /* Altura fixa para o carrossel */
    border-radius: 12px;
    overflow: hidden;
    margin-bottom: 24px;
    touch-action: pan-y;
}

.play-carousel-item {
    min-width: 100%;
    height: 100%;
    position: relative;
    flex-shrink: 0;
}

.play-carousel-img {
    width: 100%;
    height: 100%;
    object-fit: fill; /* Preenche todo o espaço, pode distorcer a proporção */
}
        .play-carousel-inner {
            display: flex;
            transition: transform 0.5s ease;
            height: 100%;
        }



        .play-carousel-caption {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            background: linear-gradient(to top, rgba(0,0,0,0.7), transparent);
            padding: 16px;
            color: white;
        }

        .play-carousel-title {
            font-size: 18px;
            font-weight: 500;
            margin-bottom: 4px;
        }

        .play-carousel-desc {
            font-size: 14px;
            opacity: 0.9;
        }

        .play-carousel-indicators {
            position: absolute;
            bottom: 10px;
            left: 50%;
            transform: translateX(-50%);
            display: flex;
            gap: 6px;
        }

        .play-carousel-indicator {
            width: 8px;
            height: 8px;
            border-radius: 50%;
            background: rgba(255,255,255,0.5);
            cursor: pointer;
            transition: background 0.3s;
        }

        .play-carousel-indicator.active {
            background: white;
        }

        .play-carousel-nav {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            width: 40px;
            height: 40px;
            background: rgba(0,0,0,0.3);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            cursor: pointer;
            z-index: 10;
            opacity: 0;
            transition: opacity 0.3s;
        }

        .play-carousel:hover .play-carousel-nav {
            opacity: 1;
        }

        .play-carousel-prev {
            left: 15px;
        }

        .play-carousel-next {
            right: 15px;
        }


        /* Cards de apps */
        .play-apps-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
            gap: 16px;
        }

        .play-app-card {
            background: var(--play-card);
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
            transition: all 0.3s;
            position: relative;
        }

        .play-app-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 6px 12px rgba(0,0,0,0.1);
        }

        .play-app-img {
            width: 100%;
            height: 150px;
            object-fit: cover;
            border-radius: 12px 12px 0 0;
        }

        .play-app-content {
            padding: 12px;
        }

        .play-app-title {
            font-size: 14px;
            font-weight: 500;
            margin-bottom: 6px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .play-app-developer {
            font-size: 12px;
            color: var(--play-text-secondary);
            margin-bottom: 8px;
        }

        .play-app-rating {
            display: flex;
            align-items: center;
            gap: 4px;
            margin-bottom: 8px;
        }

        .play-app-stars {
            color: var(--play-yellow);
            font-size: 12px;
        }

        /* Botão de download */
        .play-app-download {
            width: 100%;
            padding: 10px;
            color: white;
            border: none;
            border-radius: 4px;
            font-size: 13px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.2s;
            text-decoration: none;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
            box-shadow: 0 1px 2px rgba(0,0,0,0.1);
        }

        .play-app-download:hover {
            filter: brightness(85%);
            box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        }

        .play-app-download i {
            font-size: 14px;
        }

        /* Categorias */
        .play-categories {
            display: flex;
            gap: 12px;
            overflow-x: auto;
            padding-bottom: 8px;
            margin-bottom: 16px;
            scrollbar-width: none;
        }

        .play-categories::-webkit-scrollbar {
            display: none;
        }

        .play-category {
            background: var(--play-card);
            border-radius: 50px;
            padding: 8px 16px;
            font-size: 14px;
            white-space: nowrap;
            cursor: pointer;
            border: 1px solid var(--play-border);
            transition: all 0.3s;
            text-decoration: none;
            color: inherit;
        }

        .play-category.active {
            background: var(--play-green);
            color: white;
            border-color: var(--play-green);
        }

        /* Resultados de busca */
        .search-results-title {
            font-size: 18px;
            margin: 20px 0;
            color: var(--play-text-primary);
        }

        /* Navegação principal */
        .play-navigation {
            display: flex;
            gap: 20px;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 1px solid var(--play-border);
        }

        .play-nav-item {
            padding: 8px 0;
            font-weight: 500;
            color: var(--play-text-secondary);
            text-decoration: none;
            position: relative;
            transition: all 0.2s;
        }

        .play-nav-item::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 0;
            width: 100%;
            height: 3px;
            background: var(--play-green);
            transform: scaleX(0);
            transition: transform 0.2s;
        }

        .play-nav-item.active {
            color: var(--play-green);
        }

        .play-nav-item.active::after {
            transform: scaleX(1);
        }

        /* Estilos YouTube para a seção de vídeos */
        .youtube-container {
            background-color: var(--yt-bg);
            padding-top: 16px;
        }

        .youtube-section-title {
            font-size: 20px;
            font-weight: 400;
            color: #0f0f0f;
            margin-bottom: 24px;
        }

        .youtube-videos-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
            gap: 20px;
        }

        .youtube-video-card {
            display: flex;
            flex-direction: column;
            transition: all 0.2s;
        }

        .youtube-video-thumbnail {
            position: relative;
            width: 100%;
            border-radius: 12px;
            overflow: hidden;
            aspect-ratio: 16/9;
            background: #000;
            cursor: pointer;
        }

        .youtube-video-thumbnail img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s;
        }

        .youtube-video-card:hover .youtube-video-thumbnail img {
            transform: scale(1.05);
        }

        .youtube-play-button {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 68px;
            height: 48px;
            background: rgba(0, 0, 0, 0.7);
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 20px;
            opacity: 0;
            transition: all 0.3s;
        }

        .youtube-video-card:hover .youtube-play-button {
            background: var(--yt-red);
            opacity: 1;
        }

        .youtube-video-duration {
            position: absolute;
            bottom: 8px;
            right: 8px;
            background: rgba(0, 0, 0, 0.8);
            color: white;
            padding: 3px 5px;
            border-radius: 3px;
            font-size: 12px;
            font-weight: 500;
        }

        .youtube-video-info {
            display: flex;
            padding-top: 12px;
        }

        .youtube-channel-icon {
            width: 36px;
            height: 36px;
            border-radius: 50%;
            margin-right: 12px;
            flex-shrink: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 16px;
        }

        .youtube-video-details {
            flex: 1;
        }

        .youtube-video-title {
            font-size: 16px;
            font-weight: 500;
            margin-bottom: 4px;
            color: var(--yt-text);
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
            line-height: 1.4;
        }

        .youtube-channel-name {
            font-size: 14px;
            color: var(--yt-text-secondary);
            margin-bottom: 4px;
        }

        .youtube-video-meta {
            font-size: 14px;
            color: var(--yt-text-secondary);
            display: flex;
            align-items: center;
        }

        .youtube-video-meta span:first-child::after {
            content: "•";
            margin: 0 4px;
        }

        /* Botões do YouTube abaixo do vídeo */
        .youtube-video-buttons {
            display: flex;
            gap: 10px;
            margin-top: 12px;
        }

        .youtube-video-button {
            flex: 1;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
            padding: 10px;
            border-radius: 4px;
            font-size: 14px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.2s;
            border: none;
            text-decoration: none;
        }

        .youtube-play-btn {
            background: var(--yt-red);
            color: white;
        }

        .youtube-play-btn:hover {
            background: #cc0000;
        }

        .youtube-download-btn {
            color: white;
        }

        .youtube-download-btn:hover {
            filter: brightness(85%);
        }

        /* Modal do vídeo */
        .video-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.9);
            z-index: 1000;
            overflow: hidden;
        }

        .video-modal-content {
            position: relative;
            width: 90%;
            max-width: 1000px;
            margin: 30px auto;
            background: #000;
            border-radius: 8px;
            overflow: hidden;
        }

        .video-container {
            position: relative;
            width: 100%;
            height: 0;
            padding-bottom: 56.25%; /* 16:9 */
        }

        .video-container iframe,
        .video-container video {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }

        /* Controles do vídeo */
        .video-controls {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            background: linear-gradient(to top, rgba(0, 0, 0, 0.9), rgba(0, 0, 0, 0));
            padding: 20px 15px 10px;
            display: flex;
            justify-content: space-between;
            opacity: 0;
            transition: opacity 0.3s;
            z-index: 5;
        }

        .video-container:hover .video-controls {
            opacity: 1;
        }

        .video-control-btn {
            background: none;
            border: none;
            color: white;
            font-size: 18px;
            cursor: pointer;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.2s;
            border-radius: 50%;
            margin: 0 5px;
        }

        .video-control-btn:hover {
            background: rgba(255, 255, 255, 0.2);
            color: var(--yt-blue);
        }

        .video-close {
            position: absolute;
            top: 15px;
            right: 15px;
            width: 40px;
            height: 40px;
            background: rgba(0, 0, 0, 0.6);
            border-radius: 50%;
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 20px;
            cursor: pointer;
            z-index: 10;
            transition: background 0.3s;
        }

        .video-close:hover {
            background: var(--play-red);
        }

        .video-title {
            position: absolute;
            top: 15px;
            left: 15px;
            background: rgba(0, 0, 0, 0.6);
            color: white;
            padding: 5px 10px;
            border-radius: 4px;
            font-size: 14px;
            max-width: 70%;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            z-index: 10;
        }
/* Botão de play mais visível no centro da miniatura */
.youtube-play-button {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 68px;
    height: 48px;
    background: rgba(0, 0, 0, 0.7);
    border-radius: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 20px;
    opacity: 0.8; /* Botão sempre visível */
    transition: all 0.3s;
}

.youtube-video-card:hover .youtube-play-button {
    background: var(--yt-red);
    opacity: 1;
    transform: translate(-50%, -50%) scale(1.1); /* Efeito de aumento ao passar o mouse */
}

/* Ícone de play com efeito de sombra para melhor visibilidade */
.youtube-play-button i {
    filter: drop-shadow(0 1px 2px rgba(0,0,0,0.5));
}

/* Botão de play circular alternativo (estilo móvel YouTube) */
.youtube-play-circle {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 60px;
    height: 60px;
    background: rgba(0, 0, 0, 0.6);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 20px;
    opacity: 0.9;
    transition: all 0.3s;
}

.youtube-play-circle:after {
    content: '';
    width: 0;
    height: 0;
    border-top: 15px solid transparent;
    border-left: 25px solid white;
    border-bottom: 15px solid transparent;
    margin-left: 5px;
}

.youtube-video-card:hover .youtube-play-circle {
    background: var(--yt-red);
    opacity: 1;
    transform: translate(-50%, -50%) scale(1.1);
}




/* Ajuste do container de vídeo para evitar cortes */
.inline-video-container {
    position: relative;
    width: 100%;
    border-radius: 12px;
    overflow: hidden;
    padding-bottom: 56.25%; /* Proporção 16:9 */
    height: 0; /* Altura zero com padding para manter proporção */
    background: #000;
}

/* Configuração para exibir o vídeo inteiro sem cortes */
.inline-video {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: contain; /* Exibe o vídeo inteiro sem cortes */
}

/* Barra de progresso personalizada */

.video-progress-container {
    position: absolute;
    bottom: 40px;
    left: 10px;
    right: 10px;
    height: 6px;
    background: rgba(255,255,255,0.2);
    border-radius: 3px;
    cursor: pointer;
    z-index: 15;
}

.video-progress-bar {
    height: 100%;
    background: #FF0000; /* Vermelho YouTube */
    border-radius: 3px;
    width: 0%;
}

.video-progress-handle {
    position: absolute;
    right: -6px;
    top: -5px;
    width: 16px;
    height: 16px;
    background: #FF0000;
    border-radius: 50%;
    border: 2px solid white;
    transform: scale(0);
    transition: transform 0.1s;
}

.video-progress-container:hover .video-progress-handle {
    transform: scale(1);
}

/* Timer de tempo */
.video-time {
    position: absolute;
    bottom: 10px;
    right: 10px;
    color: white;
    font-size: 12px;
    background: rgba(0,0,0,0.5);
    padding: 2px 4px;
    border-radius: 2px;
    z-index: 15;
}

/* Estilos para o player de vídeo interno */


.inline-video-controls {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: linear-gradient(to top, rgba(0,0,0,0.8), transparent);
    padding: 15px 10px 10px;
    display: flex;
    justify-content: flex-start;
    gap: 10px;
    opacity: 0;
    transition: opacity 0.3s;
    z-index: 10;
}

.inline-video-container:hover .inline-video-controls {
    opacity: 1;
}

.inline-video-control-btn {
    background: none;
    border: none;
    color: white;
    width: 30px;
    height: 30px;
    font-size: 14px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.2s;
}

.inline-video-control-btn:hover {
    background: rgba(255,255,255,0.2);
}

.inline-video-title {
    position: absolute;
    top: 10px;
    left: 10px;
    background: rgba(0,0,0,0.7);
    color: white;
    padding: 5px 8px;
    border-radius: 4px;
    font-size: 12px;
    max-width: 80%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    z-index: 10;
    opacity: 0;
    transition: opacity 0.3s;
}

.inline-video-container:hover .inline-video-title {
    opacity: 1;
}

/* Expandir o card quando o vídeo estiver tocando */
.youtube-video-card-expanded {
    transform: scale(1.02);
    z-index: 10;
    box-shadow: 0 8px 20px rgba(0,0,0,0.2);
}

/* Adaptação para mobile */
@media (max-width: 768px) {
    .inline-video-controls {
        opacity: 1; /* Sempre visível em dispositivos móveis */
        padding: 10px 5px 5px;
    }
    
    .inline-video-control-btn {
        width: 24px;
        height: 24px;
        font-size: 12px;
    }
}
        /* Responsividade */
        @media (max-width: 768px) {
            .play-apps-grid {
                grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
            }
            
            .youtube-videos-grid {
                grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
            }
            
            .play-header {
                padding: 8px 12px;
            }
            
            .play-logo-text {
                display: none;
            }
            
            .play-carousel-nav {
                opacity: 1;
                width: 30px;
                height: 30px;
            }
            
            .play-navigation {
                gap: 10px;
                justify-content: space-around;
            }
        }
    </style>
</head>
<body>
    <!-- Header estilo Play Store -->
    <header class="play-header">
        <div class="play-logo">
            <i class="fab fa-google-play play-logo-icon"></i>
            <span class="play-logo-text">Dodowlaosd Store</span>
        </div>
        
        <form class="play-search-form" action="" method="GET">
            <button type="submit"><i class="fas fa-search"></i></button>
            <input type="text" name="search" placeholder="Buscar aplicativos e vídeos..." value="<?= isset($_GET['search']) ? htmlspecialchars($_GET['search']) : '' ?>">
            <input type="hidden" name="page" value="<?= htmlspecialchars($active_page) ?>">
            <?php if ($active_category != 'all' && $active_page == 'apps'): ?>
                <input type="hidden" name="category" value="<?= htmlspecialchars($active_category) ?>">
            <?php endif; ?>
        </form>
        
        <div class="play-user">D</div>
    </header>
    
    <main class="play-container">
        <!-- Navegação principal -->
        <div class="play-navigation">
            <a href="?page=apps" class="play-nav-item <?= $active_page == 'apps' ? 'active' : '' ?>">
                <i class="fas fa-mobile-alt"></i> Aplicativos
            </a>
            <a href="?page=support" class="play-nav-item <?= $active_page == 'support' ? 'active' : '' ?>">
                <i class="fas fa-question-circle"></i> Suporte
            </a>
        </div>
        
        <?php if ($active_page == 'apps'): ?>
            <?php if (!empty($search_results)): ?>
                <!-- Mostrar resultados da busca de apps -->
                <h2 class="search-results-title">Resultados para "<?= htmlspecialchars($_GET['search']) ?>"</h2>
                
                <div class="play-apps-grid">
                    <?php foreach ($search_results as $app): 
                        // Cor única para o botão de download
                        $download_color = getColorById($app['id'], $download_button_colors);
                    ?>
                    <div class="play-app-card">
                        <?php if ($app['imagem']): ?>
                            <img src="../loja/imagens/<?= $app['imagem'] ?>" class="play-app-img" alt="<?= htmlspecialchars($app['nome']) ?>">
                        <?php else: ?>
                            <div class="play-app-img" style="background: <?= getColorById($app['id'], $channel_colors) ?>;"></div>
                        <?php endif; ?>
                        
                        <div class="play-app-content">
                            <h3 class="play-app-title"><?= htmlspecialchars($app['nome']) ?></h3>
                            <p class="play-app-developer"><?= htmlspecialchars($app['desenvolvedor']) ?></p>
                            
                            <div class="play-app-rating">
                                <div class="play-app-stars">
                                    <i class="fas fa-star"></i>
                                    <i class="fas fa-star"></i>
                                    <i class="fas fa-star"></i>
                                    <i class="fas fa-star"></i>
                                    <i class="fas fa-star-half-alt"></i>
                                </div>
                                <span><?= rand(100, 999) ?></span>
                            </div>
                            
                            <a href="../loja/apps/<?= $app['arquivo_apk'] ?>" class="play-app-download" style="background-color: <?= $download_color ?>;" download>
                                <i class="fas fa-download"></i> Baixar
                            </a>
                        </div>
                    </div>
                    <?php endforeach; ?>
                </div>
                
            <?php else: ?>
                <!-- Conteúdo normal quando não há busca -->
                <!-- Carrossel de Anúncios -->
                <?php if (!empty($ads)): ?>
                <div class="play-carousel">
                    <div class="play-carousel-nav play-carousel-prev">
                        <i class="fas fa-chevron-left"></i>
                    </div>
                    
                    <div class="play-carousel-inner" id="carousel-inner">
                        <?php foreach ($ads as $index => $ad): ?>
                        <div class="play-carousel-item">
                            <img src="../loja/anuncios/<?= $ad['imagem'] ?>" class="play-carousel-img" alt="<?= htmlspecialchars($ad['titulo']) ?>">
                            <div class="play-carousel-caption">
                                <h3 class="play-carousel-title"><?= htmlspecialchars($ad['titulo']) ?></h3>
                                <p class="play-carousel-desc"><?= htmlspecialchars($ad['descricao']) ?></p>
                            </div>
                        </div>
                        <?php endforeach; ?>
                    </div>
                    
                    <div class="play-carousel-nav play-carousel-next">
                        <i class="fas fa-chevron-right"></i>
                    </div>
                    
                    <div class="play-carousel-indicators" id="carousel-indicators">
                        <?php foreach ($ads as $index => $ad): ?>
                        <div class="play-carousel-indicator <?= $index === 0 ? 'active' : '' ?>" data-index="<?= $index ?>"></div>
                        <?php endforeach; ?>
                    </div>
                </div>
                <?php endif; ?>
                
                <!-- Categorias -->
                <div class="play-categories">
                    <a href="?page=apps&category=all" class="play-category <?= $active_category == 'all' ? 'active' : '' ?>">Todos</a>
                    
                    <?php foreach ($categories as $category): 
                        // Corrigir nome da categoria
                        $display_name = $category;
                        if ($category == 'Redes Sociais') $display_name = 'Social';
                    ?>
                    <a href="?page=apps&category=<?= urlencode($category) ?>" class="play-category <?= $active_category == $category ? 'active' : '' ?>">
                        <?= htmlspecialchars($display_name) ?>
                    </a>
                    <?php endforeach; ?>
                </div>
                
                <!-- Seção de VPN (primeiro como solicitado) -->
               <?php if ($active_category == 'all' || $active_category == 'Internet VPN'): ?>
    <!-- Seção de VPN (primeiro como solicitado) -->
    <?php if ($active_category == 'all' || $active_category == 'Internet VPN'): ?>
    <section class="play-section">
        <div class="play-section-header">
            <h2 class="play-section-title">Internet VPN</h2>
            <?php if ($active_category == 'all'): ?>
            <a href="?page=apps&category=Internet VPN" class="play-section-more">Ver todos</a>
            <?php endif; ?>
        </div>
        
        <div class="play-apps-grid">
            <?php 
            $apps_result->data_seek(0);
            $vpn_shown = 0;
            while ($app = $apps_result->fetch_assoc()): 
                if ($app['categoria'] == 'Internet VPN' && $vpn_shown < 4):
                    $vpn_shown++;
                    // Cor única para o botão de download
                    $download_color = getColorById($app['id'], $download_button_colors);
            ?>
            <div class="play-app-card">
                <?php if ($app['imagem']): ?>
                    <img src="../loja/imagens/<?= $app['imagem'] ?>" class="play-app-img" alt="<?= htmlspecialchars($app['nome']) ?>">
                <?php else: ?>
                    <div class="play-app-img" style="background: <?= getColorById($app['id'], $channel_colors) ?>;"></div>
                <?php endif; ?>
                
                <div class="play-app-content">
                    <h3 class="play-app-title"><?= htmlspecialchars($app['nome']) ?></h3>
                    <p class="play-app-developer"><?= htmlspecialchars($app['desenvolvedor']) ?></p>
                    
                    <div class="play-app-rating">
                        <div class="play-app-stars">
                            <i class="fas fa-star"></i>
                            <i class="fas fa-star"></i>
                            <i class="fas fa-star"></i>
                            <i class="fas fa-star"></i>
                            <i class="far fa-star"></i>
                        </div>
                        <span><?= rand(100, 999) ?></span>
                    </div>
                    
                    <a href="../loja/apps/<?= $app['arquivo_apk'] ?>" class="play-app-download" style="background-color: <?= $download_color ?>;" download>
                        <i class="fas fa-download"></i> Baixar
                    </a>
                </div>
            </div>
            <?php 
                endif;
            endwhile; 
            ?>
        </div>
    </section>
    <?php endif; ?>
    
    <?php if ($active_category == 'all'): ?>
    <!-- Seção de Apps em Destaque -->
    <section class="play-section">
        <div class="play-section-header">
            <h2 class="play-section-title">Aplicativos em Destaque</h2>
            <a href="?page=apps&category=all" class="play-section-more">Ver todos</a>
        </div>
        
        <div class="play-apps-grid">
            <?php 
            $apps_result->data_seek(0);
            $shown = 0;
            while ($app = $apps_result->fetch_assoc()): 
                if ($app['categoria'] != 'Internet VPN' && $shown < 8):
                    $shown++;
                    // Cor única para o botão de download
                    $download_color = getColorById($app['id'], $download_button_colors);
            ?>
            <div class="play-app-card">
                <?php if ($app['imagem']): ?>
                    <img src="../loja/imagens/<?= $app['imagem'] ?>" class="play-app-img" alt="<?= htmlspecialchars($app['nome']) ?>">
                <?php else: ?>
                    <div class="play-app-img" style="background: <?= getColorById($app['id'], $channel_colors) ?>;"></div>
                <?php endif; ?>
                
                <div class="play-app-content">
                    <h3 class="play-app-title"><?= htmlspecialchars($app['nome']) ?></h3>
                    <p class="play-app-developer"><?= htmlspecialchars($app['desenvolvedor']) ?></p>
                    
                    <div class="play-app-rating">
                        <div class="play-app-stars">
                            <i class="fas fa-star"></i>
                            <i class="fas fa-star"></i>
                            <i class="fas fa-star"></i>
                            <i class="fas fa-star"></i>
                            <i class="fas fa-star-half-alt"></i>
                        </div>
                        <span><?= rand(100, 999) ?></span>
                    </div>
                    
                    <a href="../loja/apps/<?= $app['arquivo_apk'] ?>" class="play-app-download" style="background-color: <?= $download_color ?>;" download>
                        <i class="fas fa-download"></i> Baixar
                    </a>
                </div>
            </div>
            <?php 
                endif;
            endwhile; 
            ?>
        </div>
    </section>
    <?php endif; ?>

<?php else: ?>
    <!-- Esta é a nova seção para categorias específicas além de VPN -->
    <section class="play-section">
        <div class="play-section-header">
            <h2 class="play-section-title"><?= htmlspecialchars($active_category) ?></h2>
        </div>
        
        <div class="play-apps-grid">
            <?php 
            $apps_result->data_seek(0);
            $category_apps_shown = false;
            
            while ($app = $apps_result->fetch_assoc()): 
                if ($app['categoria'] == $active_category):
                    $category_apps_shown = true;
                    // Cor única para o botão de download
                    $download_color = getColorById($app['id'], $download_button_colors);
            ?>
            <div class="play-app-card">
                <?php if ($app['imagem']): ?>
                    <img src="../loja/imagens/<?= $app['imagem'] ?>" class="play-app-img" alt="<?= htmlspecialchars($app['nome']) ?>">
                <?php else: ?>
                    <div class="play-app-img" style="background: <?= getColorById($app['id'], $channel_colors) ?>;"></div>
                <?php endif; ?>
                
                <div class="play-app-content">
                    <h3 class="play-app-title"><?= htmlspecialchars($app['nome']) ?></h3>
                    <p class="play-app-developer"><?= htmlspecialchars($app['desenvolvedor']) ?></p>
                    
                    <div class="play-app-rating">
                        <div class="play-app-stars">
                            <i class="fas fa-star"></i>
                            <i class="fas fa-star"></i>
                            <i class="fas fa-star"></i>
                            <i class="fas fa-star"></i>
                            <i class="fas fa-star-half-alt"></i>
                        </div>
                        <span><?= rand(100, 999) ?></span>
                    </div>
                    
                    <a href="../loja/apps/<?= $app['arquivo_apk'] ?>" class="play-app-download" style="background-color: <?= $download_color ?>;" download>
                        <i class="fas fa-download"></i> Baixar
                    </a>
                </div>
            </div>
            <?php 
                endif;
            endwhile;
            
            if (!$category_apps_shown):
            ?>
            <div style="grid-column: 1/-1; text-align: center; padding: 40px; color: var(--play-text-secondary);">
                <i class="fas fa-exclamation-circle fa-3x" style="margin-bottom: 15px; opacity: 0.5;"></i>
                <h3>Nenhum aplicativo encontrado nesta categoria</h3>
                <p>Tente outra categoria ou volte em breve!</p>
            </div>
            <?php endif; ?>
        </div>
    </section>
<?php endif; ?>
            <?php endif; ?>
            
        <?php elseif ($active_page == 'support'): ?>
            <!-- Seção de Vídeos de Suporte (Estilo YouTube) -->
            <div class="youtube-container">
                <?php if (!empty($search_results)): ?>
                    <h2 class="youtube-section-title">Resultados para "<?= htmlspecialchars($_GET['search']) ?>"</h2>
                    
                    <div class="youtube-videos-grid">
                        <?php foreach ($search_results as $video): 
                            $upload_date = isset($video['data_upload']) ? format_date($video['data_upload']) : 'Recentemente';
                            // Cor única para o ícone do canal baseado no ID
                            $channel_color = getColorById($video['id'], $channel_colors);
                            // Ícone único para o canal baseado no ID
                            $channel_icon = getIconById($video['id'], $channel_icons);
                            // Cor única para o botão de download
                            $download_color = getColorById($video['id'], $download_button_colors);
                        ?>
                        <div class="youtube-video-card">
                            <div class="youtube-video-thumbnail" onclick="openVideoModal('<?= htmlspecialchars($video['id']) ?>')">
                                <img src="../loja/thumbnails/<?= $video['thumbnail'] ?>" alt="<?= htmlspecialchars($video['titulo']) ?>">
                                
                                <!-- Botão de play estilo YouTube -->
                                <div class="youtube-play-button">
                                    <i class="fas fa-play"></i>
                                </div>
                                
                                <!-- Duração do vídeo (use 3:45 fixo se não houver duração real) -->
                                <div class="youtube-video-duration">3:45</div>
                            </div>
                            <div class="youtube-video-info">
                                <!-- Ícone do canal com cor única -->
                                <div class="youtube-channel-icon" style="background-color: <?= $channel_color ?>;">
                                    <i class="<?= $channel_icon ?>"></i>
                                </div>
                                <div class="youtube-video-details">
                                    <h3 class="youtube-video-title"><?= htmlspecialchars($video['titulo']) ?></h3>
                                    <p class="youtube-channel-name">Canal de Suporte</p>
                                    <div class="youtube-video-meta">
                                        <span>157 visualizações</span>
                                        <span><?= $upload_date ?></span>
                                    </div>
                                </div>
                            </div>
                            <!-- Botões de play e download -->
                            <div class="youtube-video-buttons">
                                <button class="youtube-video-button youtube-play-btn" onclick="openVideoModal('<?= htmlspecialchars($video['id']) ?>')">
                                    <i class="fas fa-play"></i> Assistir
                                </button>
                                <?php if($video['tipo'] === 'arquivo' && !empty($video['arquivo_video'])): ?>
                                <a href="../loja/videos/<?= $video['arquivo_video'] ?>" class="youtube-video-button youtube-download-btn" style="background-color: <?= $download_color ?>;" download>
                                    <i class="fas fa-download"></i> Baixar
                                </a>
                                <?php else: ?>
                                <button class="youtube-video-button youtube-download-btn" style="background-color: <?= $download_color ?>;" onclick="window.open('<?= htmlspecialchars($video['url_youtube']) ?>', '_blank')">
                                    <i class="fab fa-youtube"></i> YouTube
                                </button>
                                <?php endif; ?>
                            </div>
                        </div>
                        <?php endforeach; ?>
                    </div>
                    
                <?php else: ?>
                    <!-- Carrossel de Anúncios na seção de Suporte -->
                    <?php if (!empty($ads)): ?>
                    <div class="play-carousel">
                        <div class="play-carousel-nav play-carousel-prev">
                            <i class="fas fa-chevron-left"></i>
                        </div>
                        
                        <div class="play-carousel-inner" id="support-carousel-inner">
                            <?php foreach ($ads as $index => $ad): ?>
                            <div class="play-carousel-item">
                                <img src="../loja/anuncios/<?= $ad['imagem'] ?>" class="play-carousel-img" alt="<?= htmlspecialchars($ad['titulo']) ?>">
                                <div class="play-carousel-caption">
                                    <h3 class="play-carousel-title"><?= htmlspecialchars($ad['titulo']) ?></h3>
                                    <p class="play-carousel-desc"><?= htmlspecialchars($ad['descricao']) ?></p>
                                </div>
                            </div>
                            <?php endforeach; ?>
                        </div>
                        
                        <div class="play-carousel-nav play-carousel-next">
                            <i class="fas fa-chevron-right"></i>
                        </div>
                        
                        <div class="play-carousel-indicators" id="support-carousel-indicators">
                            <?php foreach ($ads as $index => $ad): ?>
                            <div class="play-carousel-indicator <?= $index === 0 ? 'active' : '' ?>" data-index="<?= $index ?>"></div>
                            <?php endforeach; ?>
                        </div>
                    </div>
                    <?php endif; ?>

                    <h2 class="youtube-section-title">Vídeos de Suporte</h2>
                    
                    <?php if (empty($support_videos)): ?>
                        <div style="text-align: center; padding: 40px; color: var(--yt-text-secondary);">
                            <i class="fas fa-video fa-3x" style="margin-bottom: 15px; opacity: 0.5;"></i>
                            <h3 style="margin-bottom: 10px;">Nenhum vídeo de suporte disponível</h3>
                            <p>Volte em breve para tutoriais e dicas</p>
                        </div>
                    <?php else: ?>
                        <div class="youtube-videos-grid">
                            <?php foreach ($support_videos as $video): 
                                // Usar data real de upload
                                $upload_date = isset($video['data_upload']) ? format_date($video['data_upload']) : 'Recentemente';
                                // Cor única para o ícone do canal baseado no ID
                                $channel_color = getColorById($video['id'], $channel_colors);
                                // Ícone único para o canal baseado no ID
                                $channel_icon = getIconById($video['id'], $channel_icons);
                                // Cor única para o botão de download
                                $download_color = getColorById($video['id'], $download_button_colors);
                            ?>
                            <div class="youtube-video-card">
                                <div class="youtube-video-thumbnail" onclick="openVideoModal('<?= htmlspecialchars($video['id']) ?>')">
                                    <img src="../loja/thumbnails/<?= $video['thumbnail'] ?>" alt="<?= htmlspecialchars($video['titulo']) ?>">
                                    
                                    <!-- Botão de play estilo YouTube -->
                                    <div class="youtube-play-button">
                                        <i class="fas fa-play"></i>
                                    </div>
                                    
                                    <!-- Duração do vídeo (use 3:45 fixo se não houver duração real) -->
                                    <div class="youtube-video-duration">3:45</div>
                                </div>
                                <div class="youtube-video-info">
                                    <!-- Ícone do canal com cor única e ícone único -->
                                    <div class="youtube-channel-icon" style="background-color: <?= $channel_color ?>;">
                                        <i class="<?= $channel_icon ?>"></i>
                                    </div>
                                    <div class="youtube-video-details">
                                        <h3 class="youtube-video-title"><?= htmlspecialchars($video['titulo']) ?></h3>
                                        <p class="youtube-channel-name">Canal de Suporte</p>
                                        <div class="youtube-video-meta">
                                            <span>157 visualizações</span>
                                            <span><?= $upload_date ?></span>
                                        </div>
                                    </div>
                                </div>
                                <!-- Botões de play e download com cores únicas -->
                                <div class="youtube-video-buttons">
                                    <button class="youtube-video-button youtube-play-btn" onclick="openVideoModal('<?= htmlspecialchars($video['id']) ?>')">
                                        <i class="fas fa-play"></i> Assistir
                                    </button>
                                    <?php if($video['tipo'] === 'arquivo' && !empty($video['arquivo_video'])): ?>
                                    <a href="../loja/videos/<?= $video['arquivo_video'] ?>" class="youtube-video-button youtube-download-btn" style="background-color: <?= $download_color ?>;" download>
                                        <i class="fas fa-download"></i> Baixar
                                    </a>
                                    <?php else: ?>
                                    <button class="youtube-video-button youtube-download-btn" style="background-color: <?= $download_color ?>;" onclick="window.open('<?= htmlspecialchars($video['url_youtube']) ?>', '_blank')">
                                        <i class="fab fa-youtube"></i> YouTube
                                    </button>
                                    <?php endif; ?>
                                </div>
                            </div>
                            <?php endforeach; ?>
                        </div>
                    <?php endif; ?>
                <?php endif; ?>
            </div>
        <?php endif; ?>
    </main>

    <!-- Modal do Vídeo -->
    <div id="videoModal" class="video-modal">
        <div class="video-modal-content">
            <div class="video-close" onclick="closeVideoModal()">
                <i class="fas fa-times"></i>
            </div>
            <div class="video-title" id="videoModalTitle"></div>
            <div class="video-container" id="videoContainer"></div>
        </div>
    </div>
<script>
   // Função para abrir modal do vídeo
function openVideoModal(videoId) {
    console.log("Abrindo vídeo ID:", videoId);
    
    // Dados dos vídeos pré-carregados para usar no JavaScript
    const videos = <?= json_encode($support_videos) ?>;
    console.log("Total de vídeos carregados:", videos.length);
    
    // Converter videoId para número
    const numId = parseInt(videoId);
    
    // Encontrar o vídeo correto
    const video = videos.find(v => parseInt(v.id) === numId);
    
    if (!video) {
        console.error("Vídeo não encontrado. ID:", videoId);
        alert("Erro: Vídeo não encontrado!");
        return;
    }
    
    console.log("Vídeo encontrado:", video.titulo);
    
    // Definir o título
    document.getElementById('videoModalTitle').textContent = video.titulo;
    
    // Limpar o container
    const container = document.getElementById('videoContainer');
    container.innerHTML = '';
    
    // Determinar se é YouTube ou arquivo de vídeo
    if (video.tipo === 'youtube') {
        // Extrair ID do vídeo do YouTube
        const youtubeRegex = /(?:youtube\.com\/(?:[^\/\n\s]+\/\s*[^\/\n\s]+\/|(?:v|e(?:mbed)?)\/|\S*?[?&]v=)|youtu\.be\/)([a-zA-Z0-9_-]{11})/;
        const match = video.url_youtube.match(youtubeRegex);
        
        if (match && match[1]) {
            const videoId = match[1];
            // Criar iframe do YouTube com controles
            const iframe = document.createElement('iframe');
            iframe.src = `https://www.youtube.com/embed/${videoId}?autoplay=1&controls=1&rel=0`;
            iframe.setAttribute('frameborder', '0');
            iframe.setAttribute('allowfullscreen', '');
            iframe.setAttribute('allow', 'accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture');
            container.appendChild(iframe);
            
            // Adicionar controles para YouTube
            const controls = document.createElement('div');
            controls.className = 'video-controls';
            controls.innerHTML = `
                <div style="display: flex; align-items: center;">
                    <button class="video-control-btn" title="Assistir no YouTube" onclick="window.open('https://www.youtube.com/watch?v=${videoId}', '_blank')">
                        <i class="fab fa-youtube"></i>
                    </button>
                </div>
                <div style="display: flex; align-items: center;">
                    <button class="video-control-btn" title="Tela cheia" onclick="toggleFullscreen('videoContainer')">
                        <i class="fas fa-expand"></i>
                    </button>
                </div>
            `;
            container.appendChild(controls);
        }
    } else if (video.tipo === 'arquivo') {
        console.log("Carregando vídeo do arquivo:", video.arquivo_video);
        
        // Criar elemento de vídeo nativo
        const videoElement = document.createElement('video');
        videoElement.src = `../loja/videos/${video.arquivo_video}`;
        videoElement.controls = true;
        videoElement.autoplay = true;
        container.appendChild(videoElement);
        
        // Adicionar controles para vídeo local
        const controls = document.createElement('div');
        controls.className = 'video-controls';
        controls.innerHTML = `
            <div style="display: flex; align-items: center;">
                <button class="video-control-btn" title="Baixar vídeo" onclick="downloadVideo('${video.arquivo_video}')">
                    <i class="fas fa-download"></i>
                </button>
            </div>
            <div style="display: flex; align-items: center;">
                <button class="video-control-btn" title="Tela cheia" onclick="toggleFullscreen('videoContainer')">
                    <i class="fas fa-expand"></i>
                </button>
            </div>
        `;
        container.appendChild(controls);
    }
    
    // Exibir o modal
    document.getElementById('videoModal').style.display = 'block';
    document.body.style.overflow = 'hidden'; // Impedir rolagem do corpo
}

// Fechar o modal
function closeVideoModal() {
    document.getElementById('videoModal').style.display = 'none';
    document.getElementById('videoContainer').innerHTML = '';
    document.body.style.overflow = 'auto'; // Permitir rolagem novamente
}

// Alternar tela cheia
function toggleFullscreen(elementId) {
    const element = document.getElementById(elementId);
    
    if (!document.fullscreenElement) {
        if (element.requestFullscreen) {
            element.requestFullscreen();
        } else if (element.mozRequestFullScreen) { // Firefox
            element.mozRequestFullScreen();
        } else if (element.webkitRequestFullscreen) { // Chrome, Safari e Opera
            element.webkitRequestFullscreen();
        } else if (element.msRequestFullscreen) { // IE/Edge
            element.msRequestFullscreen();
        }
    } else {
        if (document.exitFullscreen) {
            document.exitFullscreen();
        } else if (document.mozCancelFullScreen) {
            document.mozCancelFullScreen();
        } else if (document.webkitExitFullscreen) {
            document.webkitExitFullscreen();
        } else if (document.msExitFullscreen) {
            document.msExitFullscreen();
        }
    }
}

// Download de vídeos
function downloadVideo(filename) {
    const link = document.createElement('a');
    link.href = `../loja/videos/${filename}`;
    link.download = filename;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
}

// Fechar modal ao pressionar ESC
document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
        closeVideoModal();
    }
});

// Inicializar carrosséis
document.addEventListener('DOMContentLoaded', function() {
    console.log("Inicializando carrosséis");
    initCarousel('carousel-inner', 'carousel-indicators');
    initCarousel('support-carousel-inner', 'support-carousel-indicators');
});

// Função para inicializar carrossel - CORRIGIDA
function initCarousel(innerContainerId, indicatorsContainerId) {
    const carouselInner = document.getElementById(innerContainerId);
    if (!carouselInner) {
        console.log(`Carrossel '${innerContainerId}' não encontrado`);
        return;
    }
    
    console.log(`Inicializando carrossel: ${innerContainerId}`);
    
    const indicators = document.querySelectorAll(`#${indicatorsContainerId} .play-carousel-indicator`);
    const prevBtn = carouselInner.parentElement.querySelector('.play-carousel-prev');
    const nextBtn = carouselInner.parentElement.querySelector('.play-carousel-next');
    
    if (!indicators.length) {
        console.log(`Nenhum indicador encontrado para o carrossel: ${innerContainerId}`);
        return;
    }
    
    const itemCount = carouselInner.querySelectorAll('.play-carousel-item').length;
    console.log(`Total de itens no carrossel: ${itemCount}`);
    
    let currentIndex = 0;
    let carouselInterval = null;
    let isDragging = false;
    let startPos = 0;
    let currentTranslate = 0;
    let prevTranslate = 0;
    
    // Atualizar carrossel
    function updateCarousel() {
        carouselInner.style.transition = 'transform 0.5s ease';
        carouselInner.style.transform = `translateX(-${currentIndex * 100}%)`;
        
        // Atualizar indicadores
        indicators.forEach((indicator, index) => {
            indicator.classList.toggle('active', index === currentIndex);
        });
    }
    
    // Ir para slide específico
    function goToSlide(index) {
        currentIndex = (index + itemCount) % itemCount;
        updateCarousel();
    }
    
    // Próximo slide
    function goToNext() {
        console.log(`Mudando para o próximo slide - ${innerContainerId}`);
        goToSlide(currentIndex + 1);
    }
    
    // Slide anterior
    function goToPrev() {
        goToSlide(currentIndex - 1);
    }
    
    // Iniciar carrossel automático
    function startCarousel() {
        // Limpar intervalo anterior se existir
        if (carouselInterval) {
            clearInterval(carouselInterval);
        }
        
        // Iniciar novo intervalo
        carouselInterval = setInterval(() => {
            goToNext();
        }, 5000); // Reduzido para 5 segundos para testar mais rapidamente
        
        console.log(`Carrossel automático iniciado - ${innerContainerId}`);
    }
    
    // Eventos de navegação
    if (prevBtn && nextBtn) {
        prevBtn.addEventListener('click', () => {
            console.log("Botão anterior clicado");
            clearInterval(carouselInterval);
            goToPrev();
            startCarousel();
        });
        
        nextBtn.addEventListener('click', () => {
            console.log("Botão próximo clicado");
            clearInterval(carouselInterval);
            goToNext();
            startCarousel();
        });
    }
    
    // Eventos de toque para mobile
    carouselInner.addEventListener('touchstart', touchStart, { passive: true });
    carouselInner.addEventListener('touchend', touchEnd);
    carouselInner.addEventListener('touchmove', touchMove, { passive: false });
    
    // Eventos de mouse para desktop
    carouselInner.addEventListener('mousedown', touchStart);
    carouselInner.addEventListener('mouseup', touchEnd);
    carouselInner.addEventListener('mouseleave', touchEnd);
    carouselInner.addEventListener('mousemove', touchMove);
    
    function touchStart(e) {
        if (e.type === 'touchstart') {
            startPos = e.touches[0].clientX;
        } else {
            startPos = e.clientX;
            e.preventDefault();
        }
        isDragging = true;
        clearInterval(carouselInterval);
        carouselInner.style.transition = 'none';
    }
    
    function touchMove(e) {
        if (!isDragging) return;
        
        let currentPosition;
        if (e.type === 'touchmove') {
            currentPosition = e.touches[0].clientX;
        } else {
            currentPosition = e.clientX;
        }
        
        const diff = currentPosition - startPos;
        
        // Impedir comportamento padrão apenas para mouse
        if (e.type !== 'touchmove' && Math.abs(diff) > 5) {
            e.preventDefault();
            e.stopPropagation();
            return false;
        }
        
        currentTranslate = prevTranslate + diff;
        carouselInner.style.transform = `translateX(calc(-${currentIndex * 100}% + ${currentTranslate}px)`;
    }
    
    function touchEnd() {
        if (!isDragging) return;
        isDragging = false;
        
        const threshold = 100;
        if (Math.abs(currentTranslate) > threshold) {
            if (currentTranslate > 0) {
                goToPrev();
            } else {
                goToNext();
            }
        } else {
            updateCarousel();
        }
        
        currentTranslate = 0;
        prevTranslate = 0;
        carouselInner.style.transition = 'transform 0.5s ease';
        startCarousel();
    }
    
    // Clique nos indicadores
    indicators.forEach(indicator => {
        indicator.addEventListener('click', function() {
            console.log("Indicador clicado");
            clearInterval(carouselInterval);
            currentIndex = parseInt(this.getAttribute('data-index'));
            updateCarousel();
            startCarousel();
        });
    });
    
    // Iniciar carrossel
    updateCarousel();
    startCarousel();
    
    // Verificar o funcionamento após 1 segundo
    setTimeout(() => {
        console.log(`Status do carrossel ${innerContainerId}: Ativo e na posição ${currentIndex}`);
    }, 1000);
    
    // Forçar a mudança de slide após 2 segundos para testar o funcionamento
    setTimeout(() => {
        goToNext();
        console.log(`Slide forçado para testar - ${innerContainerId}`);
    }, 2000);
}

// Função para reproduzir vídeo diretamente no card
function playVideoInCard(videoId, cardElement) {
    // Encontrar elementos dentro do card
    const thumbnail = cardElement.querySelector('.youtube-video-thumbnail');
    const title = cardElement.querySelector('.youtube-video-title').textContent;
    
    // Criar container de vídeo no lugar da thumbnail
    const videoContainer = document.createElement('div');
    videoContainer.className = 'inline-video-container';
    
    // Carregar dados do vídeo
    const videos = window.supportVideos || [];
    const video = videos.find(v => parseInt(v.id) === parseInt(videoId));
    
    if (!video) {
        console.error("Vídeo não encontrado");
        return;
    }
    
    // Determinar tipo de vídeo e criar elemento apropriado
    let videoElement;
    
    if (video.tipo === 'youtube') {
        // Extrair ID do vídeo do YouTube
        const youtubeRegex = /(?:youtube\.com\/(?:[^\/\n\s]+\/\s*[^\/\n\s]+\/|(?:v|e(?:mbed)?)\/|\S*?[?&]v=)|youtu\.be\/)([a-zA-Z0-9_-]{11})/;
        const match = video.url_youtube.match(youtubeRegex);
        
        if (match && match[1]) {
            const youtubeId = match[1];
            // Criar iframe do YouTube
            videoElement = document.createElement('iframe');
            videoElement.src = `https://www.youtube.com/embed/${youtubeId}?autoplay=1&controls=1&rel=0`;
            videoElement.setAttribute('frameborder', '0');
            videoElement.setAttribute('allowfullscreen', '');
            videoElement.setAttribute('allow', 'accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture');
        }
    } else if (video.tipo === 'arquivo') {
        // Criar elemento de vídeo HTML5
        videoElement = document.createElement('video');
        videoElement.src = `../loja/videos/${video.arquivo_video}`;
        videoElement.controls = true;
        videoElement.autoplay = true;
    }
    
    if (!videoElement) {
        console.error("Não foi possível criar o elemento de vídeo");
        return;
    }
    
    // Adicionar classe ao elemento de vídeo
    videoElement.className = 'inline-video';
    
    // Criar controles personalizados
    const controls = createCustomControls(video, videoElement);
    
    // Adicionar elementos ao container
    videoContainer.appendChild(videoElement);
    videoContainer.appendChild(controls);
    
    // Substituir thumbnail pelo container de vídeo
    thumbnail.parentNode.replaceChild(videoContainer, thumbnail);
    
    // Expandir o card para dar mais espaço ao vídeo
    cardElement.classList.add('youtube-video-card-expanded');
    
    // Adicionar título ao vídeo
    const videoTitle = document.createElement('div');
    videoTitle.className = 'inline-video-title';
    videoTitle.textContent = title;
    videoContainer.appendChild(videoTitle);
}

// Criar controles personalizados para o vídeo
function createCustomControls(video, videoElement) {
    const controlsContainer = document.createElement('div');
    controlsContainer.className = 'inline-video-controls';
    
    // Botão play/pause
    const playButton = document.createElement('button');
    playButton.className = 'inline-video-control-btn';
    playButton.innerHTML = '<i class="fas fa-pause"></i>';
    playButton.title = 'Play/Pause';
    
    playButton.addEventListener('click', function() {
        if (videoElement.tagName === 'VIDEO') {
            if (videoElement.paused) {
                videoElement.play();
                this.innerHTML = '<i class="fas fa-pause"></i>';
            } else {
                videoElement.pause();
                this.innerHTML = '<i class="fas fa-play"></i>';
            }
        } else if (videoElement.tagName === 'IFRAME') {
            // Para YouTube iframe, envie mensagem para pausar/reproduzir
            try {
                const message = JSON.stringify({
                    event: 'command',
                    func: 'togglePlayPause'
                });
                videoElement.contentWindow.postMessage(message, '*');
            } catch(e) {
                console.error("Não foi possível controlar o iframe", e);
            }
        }
    });
    
    // Botão mudo
    const muteButton = document.createElement('button');
    muteButton.className = 'inline-video-control-btn';
    muteButton.innerHTML = '<i class="fas fa-volume-up"></i>';
    muteButton.title = 'Mudo';
    
    muteButton.addEventListener('click', function() {
        if (videoElement.tagName === 'VIDEO') {
            videoElement.muted = !videoElement.muted;
            this.innerHTML = videoElement.muted ? 
                '<i class="fas fa-volume-mute"></i>' : 
                '<i class="fas fa-volume-up"></i>';
        } else if (videoElement.tagName === 'IFRAME') {
            try {
                const message = JSON.stringify({
                    event: 'command',
                    func: 'mute'
                });
                videoElement.contentWindow.postMessage(message, '*');
                this.innerHTML = '<i class="fas fa-volume-mute"></i>';
            } catch(e) {
                console.error("Não foi possível controlar o áudio do iframe", e);
            }
        }
    });
    
    // Botão tela cheia
    const fullscreenButton = document.createElement('button');
    fullscreenButton.className = 'inline-video-control-btn';
    fullscreenButton.innerHTML = '<i class="fas fa-expand"></i>';
    fullscreenButton.title = 'Tela cheia';
    
    fullscreenButton.addEventListener('click', function() {
        if (videoElement.requestFullscreen) {
            videoElement.requestFullscreen();
        } else if (videoElement.mozRequestFullScreen) {
            videoElement.mozRequestFullScreen();
        } else if (videoElement.webkitRequestFullscreen) {
            videoElement.webkitRequestFullscreen();
        } else if (videoElement.msRequestFullscreen) {
            videoElement.msRequestFullscreen();
        }
    });
    
    // Botão de download (para vídeos locais)
    if (video.tipo === 'arquivo' && video.arquivo_video) {
        const downloadButton = document.createElement('button');
        downloadButton.className = 'inline-video-control-btn';
        downloadButton.innerHTML = '<i class="fas fa-download"></i>';
        downloadButton.title = 'Download';
        
        downloadButton.addEventListener('click', function() {
            const link = document.createElement('a');
            link.href = `../loja/videos/${video.arquivo_video}`;
            link.download = video.arquivo_video;
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        });
        
        controlsContainer.appendChild(downloadButton);
    }
    
    // Adicionar todos os botões ao container
    controlsContainer.appendChild(playButton);
    controlsContainer.appendChild(muteButton);
    controlsContainer.appendChild(fullscreenButton);
    
    return controlsContainer;
}

// Inicializar player quando a página carregar
document.addEventListener('DOMContentLoaded', function() {
    // Armazenar dados dos vídeos para acesso global
    window.supportVideos = <?= json_encode($support_videos) ?>;
    
    // Substituir a função openVideoModal pela reprodução no card
    window.openVideoModal = function(videoId) {
        // Encontrar o card do vídeo
        const videoCards = document.querySelectorAll('.youtube-video-card');
        let targetCard = null;
        
        videoCards.forEach(card => {
            const thumbElement = card.querySelector('.youtube-video-thumbnail');
            if (thumbElement && thumbElement.getAttribute('data-video-id') === videoId) {
                targetCard = card;
            }
        });
        
        if (targetCard) {
            playVideoInCard(videoId, targetCard);
        }
    };
    
    // Adicionar atributo data-video-id a todas as thumbnails
    document.querySelectorAll('.youtube-video-thumbnail').forEach(thumb => {
        const videoId = thumb.getAttribute('onclick').match(/'([^']+)'/)[1];
        thumb.setAttribute('data-video-id', videoId);
        
        // Remover onclick para usar addEventListener
        const onclickFn = thumb.getAttribute('onclick');
        thumb.removeAttribute('onclick');
        
        // Adicionar event listener para clicar na thumbnail
        thumb.addEventListener('click', function() {
            const videoId = this.getAttribute('data-video-id');
            playVideoInCard(videoId, this.closest('.youtube-video-card'));
        });
    });
});


document.addEventListener('DOMContentLoaded', function () {
    const video = document.getElementById('custom-video');
    const progressBar = document.getElementById('progress-bar');

    // Atualizar a barra de progresso conforme o vídeo avança
    video.addEventListener('timeupdate', function () {
        const percentage = (video.currentTime / video.duration) * 100;
        progressBar.value = percentage;
    });

    // Permitir que o usuário avance ou volte no vídeo ao arrastar a barra
    progressBar.addEventListener('input', function () {
        const time = (progressBar.value / 100) * video.duration;
        video.currentTime = time;
    });
});
    </script>
</body>
</html>
